# This is a basic workflow to help you get started with Actions

name: Create thermals.mbtiles + thermals.brokjson.zip

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    paths:
      - '*.geojson'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_mbtiles:
    if: ${{ github.ref == 'refs/heads/master' }}
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Clone this repo=thermalmap-geojson-data + thermalmap-tippecanoe repo 
        uses: actions/checkout@v3
      
      # This part here is cloning a second repository
      # While cloning the repository:
      #   - it clones the repo into the given `path`
      #   - it checks out the branch defined at `ref`
      - name: Clone thermalmap-tippecanoe repo
        uses: actions/checkout@v2
        with:
          repository: llauner/thermalmap-tippecanoe
          path: ./tippecanoe
          ref: master

      # Install tippecanoe
      - name: Install tippecanoe
        run: |
          cd tippecanoe
          sudo make -j
          sudo make install

      # Runs tippecannoe
      - name: Run tippecanoe to generate tiles
        run: |
          for fileName in $(ls *.geojson); do
            CURRENT_FILE=$fileName
            CURRENT_FILE_NAME=$(basename -- "$CURRENT_FILE")
            CURRENT_FILE_NAME="${CURRENT_FILE_NAME%.*}"
            echo "Converting...: $CURRENT_FILE -> $CURRENT_FILE_NAME.mbtiles"

            tippecanoe -r1 -z12 --progress-interval=20 --drop-densest-as-needed --extend-zooms-if-still-dropping  -o $CURRENT_FILE_NAME.mbtiles $CURRENT_FILE --force
          done
     
      # Push changes to repo
      - name: git pull
        run: git pull    
      - name: Push changes into repo
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Automated Change
          file_pattern: '*.mbtiles'

  build_brokjson:
    #needs: [build_mbtiles]

    name: Build brokjson file from geojson
    if: ${{ github.ref == 'refs/heads/master' }}
    runs-on: ubuntu-latest

    steps:
      - name: Install Zip
        run: |
          sudo apt install zip

      - name: Clone thermal_map
        uses: actions/checkout@v3
        with:
          repository: llauner/thermal_map
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          path: ./thermal_map
          ref: master

      - name: Clone thermalmap-geojson-data repo
        uses: actions/checkout@v3
        with:
          path: ./thermalmap-geojson-data
          ref: master
          
      - uses: actions/setup-python@v4
        with:
            python-version: 3.7

      - name: Install thermal_map and create thermals.brokjson.zip
        id: thermal_map
        run: |
          cd ./thermal_map
          python -VV
          pip install -r requirements_main.txt
          for fileName in $(ls ../thermalmap-geojson-data/*.geojson); do
            CURRENT_FILE=$fileName
            CURRENT_FILE_NAME=$(basename -- "$CURRENT_FILE")
            CURRENT_FILE_NAME="${CURRENT_FILE_NAME%.*}"
           
            python main_geojson2brokjson.py ../thermalmap-geojson-data/$CURRENT_FILE_NAME.geojson ../thermalmap-geojson-data/$CURRENT_FILE_NAME.brokjson
            zip ../thermalmap-geojson-data/$CURRENT_FILE_NAME.brokjson.zip ../thermalmap-geojson-data/$CURRENT_FILE_NAME.brokjson
          done

      # Push changes to repo    
      - name: git pull
        run: |
          cd ./thermalmap-geojson-data
          git pull   
      - name: Push changes into repo
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          repository: ./thermalmap-geojson-data
          commit_message: Automated Change
          file_pattern: '*.brokjson.zip'


  push-event-to-other-repo:
    needs: [build_mbtiles]
    name: Dispatch to other repo= thermalmap-tilehut-server
    runs-on: ubuntu-latest
    steps:
      - name: Emit repository_dispatch
        uses: mvasigh/dispatch-action@main
        with:
          # You should create a personal access token and store it in your repository
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repo: thermalmap-tilehut-server
          owner: llauner
          event_type: external_push_mbtiles_created
    
